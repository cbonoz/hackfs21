{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { useState, useEffect } from \"react\";\nimport BurnerProvider from \"burner-provider\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { isAddress } from \"@ethersproject/address\";\nimport useUserAddress from \"./UserAddress\";\n\nvar useUserProvider = function (provider) {\n  var _a = __read(useState(provider), 2),\n      injectedProvider = _a[0],\n      setInjectedProvider = _a[1];\n\n  var userAddress = useUserAddress(provider);\n  useEffect(function () {\n    // If provider is read-only, generate a burner wallet.\n    setInjectedProvider(isAddress(userAddress) ? provider : new Web3Provider(new BurnerProvider(provider.connection.url)));\n  }, [userAddress, provider]);\n  return injectedProvider;\n};\n\nexport default useUserProvider;","map":{"version":3,"sources":["/Users/chrisbuonocore/personal/hackathons/hackfs21/node_modules/eth-hooks/lib/UserProvider.js"],"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","useState","useEffect","BurnerProvider","Web3Provider","isAddress","useUserAddress","useUserProvider","provider","_a","injectedProvider","setInjectedProvider","userAddress","connection","url"],"mappings":"AAAA,IAAIA,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCH,CAAC,CAACG,MAAM,CAACC,QAAR,CAAzC;AACA,MAAI,CAACF,CAAL,EAAQ,OAAOF,CAAP;AACR,MAAIK,CAAC,GAAGH,CAAC,CAACI,IAAF,CAAON,CAAP,CAAR;AAAA,MAAmBO,CAAnB;AAAA,MAAsBC,EAAE,GAAG,EAA3B;AAAA,MAA+BC,CAA/B;;AACA,MAAI;AACA,WAAO,CAACR,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAF,EAAL,EAAeC,IAApD,EAA0DH,EAAE,CAACI,IAAH,CAAQL,CAAC,CAACM,KAAV;AAC7D,GAFD,CAGA,OAAOC,KAAP,EAAc;AAAEL,IAAAA,CAAC,GAAG;AAAEK,MAAAA,KAAK,EAAEA;AAAT,KAAJ;AAAuB,GAHvC,SAIQ;AACJ,QAAI;AACA,UAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAR,KAAiBT,CAAC,GAAGG,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuCH,CAAC,CAACI,IAAF,CAAOD,CAAP;AAC1C,KAFD,SAGQ;AAAE,UAAII,CAAJ,EAAO,MAAMA,CAAC,CAACK,KAAR;AAAgB;AACpC;;AACD,SAAON,EAAP;AACH,CAfD;;AAgBA,SAASO,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,eAA3B;;AACA,IAAIC,eAAe,GAAG,UAAUC,QAAV,EAAoB;AACtC,MAAIC,EAAE,GAAGxB,MAAM,CAACgB,QAAQ,CAACO,QAAD,CAAT,EAAqB,CAArB,CAAf;AAAA,MAAwCE,gBAAgB,GAAGD,EAAE,CAAC,CAAD,CAA7D;AAAA,MAAkEE,mBAAmB,GAAGF,EAAE,CAAC,CAAD,CAA1F;;AACA,MAAIG,WAAW,GAAGN,cAAc,CAACE,QAAD,CAAhC;AACAN,EAAAA,SAAS,CAAC,YAAY;AAClB;AACAS,IAAAA,mBAAmB,CAACN,SAAS,CAACO,WAAD,CAAT,GAAyBJ,QAAzB,GAAoC,IAAIJ,YAAJ,CAAiB,IAAID,cAAJ,CAAmBK,QAAQ,CAACK,UAAT,CAAoBC,GAAvC,CAAjB,CAArC,CAAnB;AACH,GAHQ,EAGN,CAACF,WAAD,EAAcJ,QAAd,CAHM,CAAT;AAIA,SAAOE,gBAAP;AACH,CARD;;AASA,eAAeH,eAAf","sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useState, useEffect } from \"react\";\nimport BurnerProvider from \"burner-provider\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { isAddress } from \"@ethersproject/address\";\nimport useUserAddress from \"./UserAddress\";\nvar useUserProvider = function (provider) {\n    var _a = __read(useState(provider), 2), injectedProvider = _a[0], setInjectedProvider = _a[1];\n    var userAddress = useUserAddress(provider);\n    useEffect(function () {\n        // If provider is read-only, generate a burner wallet.\n        setInjectedProvider(isAddress(userAddress) ? provider : new Web3Provider(new BurnerProvider(provider.connection.url)));\n    }, [userAddress, provider]);\n    return injectedProvider;\n};\nexport default useUserProvider;\n"]},"metadata":{},"sourceType":"module"}