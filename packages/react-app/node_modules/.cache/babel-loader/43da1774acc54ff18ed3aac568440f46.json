{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { utils } from \"ethers\";\nimport { useEffect, useState } from \"react\"; // resolved if(name){} to not save \"\" into cache\n\n/*\n  ~ What it does? ~\n\n  Gets ENS name from given address and provider\n\n  ~ How can I use? ~\n\n  const ensName = useLookupAddress(mainnetProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get ENS name corresponding to given address\n*/\n\nconst lookupAddress = async (provider, address) => {\n  if (address && utils.isAddress(address)) {\n    // console.log(`looking up ${address}`)\n    try {\n      // Accuracy of reverse resolution is not enforced.\n      // We then manually ensure that the reported ens name resolves to address\n      const reportedName = await provider.lookupAddress(address);\n      const resolvedAddress = await provider.resolveName(reportedName);\n\n      if (address && utils.getAddress(address) === utils.getAddress(resolvedAddress)) {\n        return reportedName;\n      }\n\n      return utils.getAddress(address);\n    } catch (e) {\n      return utils.getAddress(address);\n    }\n  }\n\n  return 0;\n};\n\nconst useLookupAddress = (provider, address) => {\n  _s();\n\n  const [ensName, setEnsName] = useState(address); // const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address); Writing directly due to sync issues\n\n  useEffect(() => {\n    let cache = window.localStorage.getItem(\"ensCache_\" + address);\n    cache = cache && JSON.parse(cache);\n\n    if (cache && cache.timestamp > Date.now()) {\n      setEnsName(cache.name);\n    } else if (provider) {\n      lookupAddress(provider, address).then(name => {\n        if (name) {\n          setEnsName(name);\n          window.localStorage.setItem(\"ensCache_\" + address, JSON.stringify({\n            timestamp: Date.now() + 360000,\n            name\n          }));\n        }\n      });\n    }\n  }, [provider, address, setEnsName]);\n  return ensName;\n};\n\n_s(useLookupAddress, \"AnQWrN18E4U0qEtcBRKu0ZOOEAY=\");\n\nexport default useLookupAddress;","map":{"version":3,"sources":["/Users/chrisbuonocore/personal/hackathons/hackfs21/packages/react-app/src/hooks/LookupAddress.js"],"names":["utils","useEffect","useState","lookupAddress","provider","address","isAddress","reportedName","resolvedAddress","resolveName","getAddress","e","useLookupAddress","ensName","setEnsName","cache","window","localStorage","getItem","JSON","parse","timestamp","Date","now","name","then","setItem","stringify"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,QAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG,OAAOC,QAAP,EAAiBC,OAAjB,KAA6B;AACjD,MAAIA,OAAO,IAAIL,KAAK,CAACM,SAAN,CAAgBD,OAAhB,CAAf,EAAyC;AACvC;AACA,QAAI;AACF;AACA;AACA,YAAME,YAAY,GAAG,MAAMH,QAAQ,CAACD,aAAT,CAAuBE,OAAvB,CAA3B;AAEA,YAAMG,eAAe,GAAG,MAAMJ,QAAQ,CAACK,WAAT,CAAqBF,YAArB,CAA9B;;AAEA,UAAIF,OAAO,IAAIL,KAAK,CAACU,UAAN,CAAiBL,OAAjB,MAA8BL,KAAK,CAACU,UAAN,CAAiBF,eAAjB,CAA7C,EAAgF;AAC9E,eAAOD,YAAP;AACD;;AACD,aAAOP,KAAK,CAACU,UAAN,CAAiBL,OAAjB,CAAP;AACD,KAXD,CAWE,OAAOM,CAAP,EAAU;AACV,aAAOX,KAAK,CAACU,UAAN,CAAiBL,OAAjB,CAAP;AACD;AACF;;AACD,SAAO,CAAP;AACD,CAnBD;;AAqBA,MAAMO,gBAAgB,GAAG,CAACR,QAAD,EAAWC,OAAX,KAAuB;AAAA;;AAC9C,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACG,OAAD,CAAtC,CAD8C,CAE9C;;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAAcb,OAA1C,CAAZ;AACAU,IAAAA,KAAK,GAAGA,KAAK,IAAII,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAjB;;AAEA,QAAIA,KAAK,IAAIA,KAAK,CAACM,SAAN,GAAkBC,IAAI,CAACC,GAAL,EAA/B,EAA2C;AACzCT,MAAAA,UAAU,CAACC,KAAK,CAACS,IAAP,CAAV;AACD,KAFD,MAEO,IAAIpB,QAAJ,EAAc;AACnBD,MAAAA,aAAa,CAACC,QAAD,EAAWC,OAAX,CAAb,CAAiCoB,IAAjC,CAAsCD,IAAI,IAAI;AAC5C,YAAIA,IAAJ,EAAU;AACRV,UAAAA,UAAU,CAACU,IAAD,CAAV;AACAR,UAAAA,MAAM,CAACC,YAAP,CAAoBS,OAApB,CACE,cAAcrB,OADhB,EAEEc,IAAI,CAACQ,SAAL,CAAe;AACbN,YAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,KAAa,MADX;AAEbC,YAAAA;AAFa,WAAf,CAFF;AAOD;AACF,OAXD;AAYD;AACF,GApBQ,EAoBN,CAACpB,QAAD,EAAWC,OAAX,EAAoBS,UAApB,CApBM,CAAT;AAsBA,SAAOD,OAAP;AACD,CA3BD;;GAAMD,gB;;AA6BN,eAAeA,gBAAf","sourcesContent":["import { utils } from \"ethers\";\nimport { useEffect, useState } from \"react\";\n\n// resolved if(name){} to not save \"\" into cache\n\n/*\n  ~ What it does? ~\n\n  Gets ENS name from given address and provider\n\n  ~ How can I use? ~\n\n  const ensName = useLookupAddress(mainnetProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get ENS name corresponding to given address\n*/\n\nconst lookupAddress = async (provider, address) => {\n  if (address && utils.isAddress(address)) {\n    // console.log(`looking up ${address}`)\n    try {\n      // Accuracy of reverse resolution is not enforced.\n      // We then manually ensure that the reported ens name resolves to address\n      const reportedName = await provider.lookupAddress(address);\n\n      const resolvedAddress = await provider.resolveName(reportedName);\n\n      if (address && utils.getAddress(address) === utils.getAddress(resolvedAddress)) {\n        return reportedName;\n      }\n      return utils.getAddress(address);\n    } catch (e) {\n      return utils.getAddress(address);\n    }\n  }\n  return 0;\n};\n\nconst useLookupAddress = (provider, address) => {\n  const [ensName, setEnsName] = useState(address);\n  // const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address); Writing directly due to sync issues\n\n  useEffect(() => {\n    let cache = window.localStorage.getItem(\"ensCache_\" + address);\n    cache = cache && JSON.parse(cache);\n\n    if (cache && cache.timestamp > Date.now()) {\n      setEnsName(cache.name);\n    } else if (provider) {\n      lookupAddress(provider, address).then(name => {\n        if (name) {\n          setEnsName(name);\n          window.localStorage.setItem(\n            \"ensCache_\" + address,\n            JSON.stringify({\n              timestamp: Date.now() + 360000,\n              name,\n            }),\n          );\n        }\n      });\n    }\n  }, [provider, address, setEnsName]);\n\n  return ensName;\n};\n\nexport default useLookupAddress;\n"]},"metadata":{},"sourceType":"module"}