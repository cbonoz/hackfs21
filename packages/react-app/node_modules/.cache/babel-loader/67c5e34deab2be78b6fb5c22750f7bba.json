{"ast":null,"code":"import { WordArray } from './core.js';\nimport { SHA256Algo } from './sha256.js';\n/**\n * SHA-224 hash algorithm.\n */\n\nexport class SHA224Algo extends SHA256Algo {\n  _doReset() {\n    this._hash = new WordArray([0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);\n  }\n\n  _doFinalize() {\n    const hash = super._doFinalize.call(this);\n\n    hash.sigBytes -= 4;\n    return hash;\n  }\n\n}\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA224('message');\n *     var hash = CryptoJS.SHA224(wordArray);\n */\n\nexport const SHA224 = SHA256Algo._createHelper(SHA224Algo);\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA224(message, key);\n */\n\nexport const HmacSHA224 = SHA256Algo._createHmacHelper(SHA224Algo);","map":{"version":3,"sources":["/Users/chrisbuonocore/personal/hackathons/hackfs21/node_modules/crypto-es/lib/sha224.js"],"names":["WordArray","SHA256Algo","SHA224Algo","_doReset","_hash","_doFinalize","hash","call","sigBytes","SHA224","_createHelper","HmacSHA224","_createHmacHelper"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,UAAN,SAAyBD,UAAzB,CAAoC;AACzCE,EAAAA,QAAQ,GAAG;AACT,SAAKC,KAAL,GAAa,IAAIJ,SAAJ,CAAc,CACzB,UADyB,EAEzB,UAFyB,EAGzB,UAHyB,EAIzB,UAJyB,EAKzB,UALyB,EAMzB,UANyB,EAOzB,UAPyB,EAQzB,UARyB,CAAd,CAAb;AAUD;;AAEDK,EAAAA,WAAW,GAAG;AACZ,UAAMC,IAAI,GAAG,MAAMD,WAAN,CAAkBE,IAAlB,CAAuB,IAAvB,CAAb;;AAEAD,IAAAA,IAAI,CAACE,QAAL,IAAiB,CAAjB;AAEA,WAAOF,IAAP;AACD;;AApBwC;AAuB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMG,MAAM,GAAGR,UAAU,CAACS,aAAX,CAAyBR,UAAzB,CAAf;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMS,UAAU,GAAGV,UAAU,CAACW,iBAAX,CAA6BV,UAA7B,CAAnB","sourcesContent":["import { WordArray } from './core.js';\nimport { SHA256Algo } from './sha256.js';\n\n/**\n * SHA-224 hash algorithm.\n */\nexport class SHA224Algo extends SHA256Algo {\n  _doReset() {\n    this._hash = new WordArray([\n      0xc1059ed8,\n      0x367cd507,\n      0x3070dd17,\n      0xf70e5939,\n      0xffc00b31,\n      0x68581511,\n      0x64f98fa7,\n      0xbefa4fa4,\n    ]);\n  }\n\n  _doFinalize() {\n    const hash = super._doFinalize.call(this);\n\n    hash.sigBytes -= 4;\n\n    return hash;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA224('message');\n *     var hash = CryptoJS.SHA224(wordArray);\n */\nexport const SHA224 = SHA256Algo._createHelper(SHA224Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA224(message, key);\n */\nexport const HmacSHA224 = SHA256Algo._createHmacHelper(SHA224Algo);\n"]},"metadata":{},"sourceType":"module"}