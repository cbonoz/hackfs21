{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbuonocore/personal/hackathons/hackfs21/packages/react-app/src/components/ThemeSwitch.jsx\",\n    _s = $RefreshSig$();\n\nimport { Switch } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeSwitcher() {\n  _s();\n\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!(!theme || theme === \"light\"));\n  const {\n    switcher,\n    currentTheme,\n    status,\n    themes\n  } = useThemeSwitcher();\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  const toggleTheme = isChecked => {\n    setIsDarkMode(isChecked);\n    switcher({\n      theme: isChecked ? themes.dark : themes.light\n    });\n  }; // Avoid theme change flicker\n  // if (status === \"loading\") {\n  //   return null;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main fade-in\",\n    style: {\n      position: \"fixed\",\n      right: 8,\n      bottom: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: 8\n      },\n      children: currentTheme === \"light\" ? \"☀️\" : \"🌜\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checked: isDarkMode,\n      onChange: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeSwitcher, \"kPcmdL2klNFfVqE6zUvDOhUHpsM=\", false, function () {\n  return [useThemeSwitcher];\n});\n\n_c = ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"sources":["/Users/chrisbuonocore/personal/hackathons/hackfs21/packages/react-app/src/components/ThemeSwitch.jsx"],"names":["Switch","React","useEffect","useState","useThemeSwitcher","ThemeSwitcher","theme","window","localStorage","getItem","isDarkMode","setIsDarkMode","switcher","currentTheme","status","themes","setItem","toggleTheme","isChecked","dark","light","position","right","bottom","padding"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAE,CAACG,KAAD,IAAUA,KAAK,KAAK,OAAtB,CAAD,CAA5C;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAA6CX,gBAAgB,EAAnE;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4B,OAA5B,EAAqCH,YAArC;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,QAAMI,WAAW,GAAGC,SAAS,IAAI;AAC/BP,IAAAA,aAAa,CAACO,SAAD,CAAb;AACAN,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,KAAK,EAAEY,SAAS,GAAGH,MAAM,CAACI,IAAV,GAAiBJ,MAAM,CAACK;AAA1C,KAAD,CAAR;AACD,GAHD,CATsC,CActC;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,KAAK,EAAE,CAA5B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KAArC;AAAA,4BACE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAb;AAAA,gBAA8BX,YAAY,KAAK,OAAjB,GAA2B,IAA3B,GAAkC;AAAhE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH,UAAjB;AAA6B,MAAA,QAAQ,EAAEO;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAzBuBZ,a;UAG6BD,gB;;;KAH7BC,a","sourcesContent":["import { Switch } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nexport default function ThemeSwitcher() {\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!(!theme || theme === \"light\"));\n  const { switcher, currentTheme, status, themes } = useThemeSwitcher();\n\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  const toggleTheme = isChecked => {\n    setIsDarkMode(isChecked);\n    switcher({ theme: isChecked ? themes.dark : themes.light });\n  };\n\n  // Avoid theme change flicker\n  // if (status === \"loading\") {\n  //   return null;\n  // }\n\n  return (\n    <div className=\"main fade-in\" style={{ position: \"fixed\", right: 8, bottom: 8 }}>\n      <span style={{ padding: 8 }}>{currentTheme === \"light\" ? \"☀️\" : \"🌜\"}</span>\n      <Switch checked={isDarkMode} onChange={toggleTheme} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}