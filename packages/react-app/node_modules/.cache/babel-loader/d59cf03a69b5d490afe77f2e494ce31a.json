{"ast":null,"code":"// Process autolinks '<protocol:...>'\n'use strict';\n/*eslint max-len:0*/\n\nvar EMAIL_RE = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\nmodule.exports = function autolink(state, silent) {\n  var tail,\n      linkMatch,\n      emailMatch,\n      url,\n      fullUrl,\n      token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n    return false;\n  }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) {\n    return false;\n  }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/Users/chrisbuonocore/personal/hackathons/hackfs21/node_modules/markdown-it/lib/rules_inline/autolink.js"],"names":["EMAIL_RE","AUTOLINK_RE","module","exports","autolink","state","silent","tail","linkMatch","emailMatch","url","fullUrl","token","pos","src","charCodeAt","slice","indexOf","test","match","md","normalizeLink","validateLink","push","attrs","markup","info","content","normalizeLinkText","length"],"mappings":"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","sourcesContent":["// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n"]},"metadata":{},"sourceType":"script"}