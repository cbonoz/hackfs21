{"ast":null,"code":"/**\n * Output Feedback block mode.\n */\nimport { BlockCipherMode } from './cipher-core.js';\nexport class OFB extends BlockCipherMode {}\nOFB.Encryptor = class extends OFB {\n  processBlock(words, offset) {\n    const _words = words; // Shortcuts\n\n    const cipher = this._cipher;\n    const {\n      blockSize\n    } = cipher;\n    const iv = this._iv;\n    let keystream = this._keystream; // Generate keystream\n\n    if (iv) {\n      this._keystream = iv.slice(0);\n      keystream = this._keystream; // Remove IV for subsequent blocks\n\n      this._iv = undefined;\n    }\n\n    cipher.encryptBlock(keystream, 0); // Encrypt\n\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n\n};\nOFB.Decryptor = OFB.Encryptor;","map":{"version":3,"sources":["/Users/chrisbuonocore/personal/hackathons/hackfs21/node_modules/crypto-es/lib/mode-ofb.js"],"names":["BlockCipherMode","OFB","Encryptor","processBlock","words","offset","_words","cipher","_cipher","blockSize","iv","_iv","keystream","_keystream","slice","undefined","encryptBlock","i","Decryptor"],"mappings":"AAAA;AACA;AACA;AACA,SACEA,eADF,QAEO,kBAFP;AAIA,OAAO,MAAMC,GAAN,SAAkBD,eAAlB,CAAkC;AAEzCC,GAAG,CAACC,SAAJ,GAAgB,cAAcD,GAAd,CAAkB;AAChCE,EAAAA,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC1B,UAAMC,MAAM,GAAGF,KAAf,CAD0B,CAG1B;;AACA,UAAMG,MAAM,GAAG,KAAKC,OAApB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAgBF,MAAtB;AACA,UAAMG,EAAE,GAAG,KAAKC,GAAhB;AACA,QAAIC,SAAS,GAAG,KAAKC,UAArB,CAP0B,CAS1B;;AACA,QAAIH,EAAJ,EAAQ;AACN,WAAKG,UAAL,GAAkBH,EAAE,CAACI,KAAH,CAAS,CAAT,CAAlB;AACAF,MAAAA,SAAS,GAAG,KAAKC,UAAjB,CAFM,CAIN;;AACA,WAAKF,GAAL,GAAWI,SAAX;AACD;;AACDR,IAAAA,MAAM,CAACS,YAAP,CAAoBJ,SAApB,EAA+B,CAA/B,EAjB0B,CAmB1B;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAApB,EAA+BQ,CAAC,IAAI,CAApC,EAAuC;AACrCX,MAAAA,MAAM,CAACD,MAAM,GAAGY,CAAV,CAAN,IAAsBL,SAAS,CAACK,CAAD,CAA/B;AACD;AACF;;AAxB+B,CAAlC;AA0BAhB,GAAG,CAACiB,SAAJ,GAAgBjB,GAAG,CAACC,SAApB","sourcesContent":["/**\n * Output Feedback block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class OFB extends BlockCipherMode {\n}\nOFB.Encryptor = class extends OFB {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let keystream = this._keystream;\n\n    // Generate keystream\n    if (iv) {\n      this._keystream = iv.slice(0);\n      keystream = this._keystream;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    cipher.encryptBlock(keystream, 0);\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nOFB.Decryptor = OFB.Encryptor;\n"]},"metadata":{},"sourceType":"module"}