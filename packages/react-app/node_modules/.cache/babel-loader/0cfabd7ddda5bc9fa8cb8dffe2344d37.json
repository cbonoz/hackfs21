{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ripemd160_1 = require(\"../ripemd160\");\n\nvar sha256_1 = require(\"../sha256\");\n\nexports.createHmac = require(\"create-hmac\");\nexports.randomBytes = require(\"randombytes\");\n\nvar Hash = function () {\n  function Hash(hashFunction) {\n    this.hashFunction = hashFunction;\n    this.buffers = [];\n  }\n\n  Hash.prototype.update = function (buffer) {\n    if (!Buffer.isBuffer(buffer)) {\n      throw new Error(\"hdkey-crypto shim is outdated\");\n    }\n\n    this.buffers.push(buffer);\n    return this;\n  };\n\n  Hash.prototype.digest = function (param) {\n    if (param) {\n      throw new Error(\"hdkey-crypto shim is outdated\");\n    }\n\n    return this.hashFunction(Buffer.concat(this.buffers));\n  };\n\n  return Hash;\n}(); // We don't use create-hash here, as it doesn't work well with Rollup\n\n\nexports.createHash = function (name) {\n  if (name === \"ripemd160\") {\n    return new Hash(ripemd160_1.ripemd160);\n  }\n\n  if (name === \"sha256\") {\n    return new Hash(sha256_1.sha256);\n  }\n\n  throw new Error(\"hdkey-crypto shim is outdated\");\n};","map":{"version":3,"sources":["../../src/pure/shims/hdkey-crypto.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEa,OAAA,CAAA,UAAA,GAAa,OAAO,CAAC,aAAD,CAApB;AACA,OAAA,CAAA,WAAA,GAAc,OAAO,CAAC,aAAD,CAArB;;AAEb,IAAA,IAAA,GAAA,YAAA;AAGE,WAAA,IAAA,CAA6B,YAA7B,EAAkE;AAArC,SAAA,YAAA,GAAA,YAAA;AAFrB,SAAA,OAAA,GAAoB,EAApB;AAE8D;;AAE/D,EAAA,IAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,MAAd,EAA4B;AAC1B,QAAI,CAAC,MAAM,CAAC,QAAP,CAAgB,MAAhB,CAAL,EAA8B;AAC5B,YAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,SAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB;AAEA,WAAO,IAAP;AACD,GARM;;AAUA,EAAA,IAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,KAAd,EAAwB;AACtB,QAAI,KAAJ,EAAW;AACT,YAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,WAAO,KAAK,YAAL,CAAkB,MAAM,CAAC,MAAP,CAAc,KAAK,OAAnB,CAAlB,CAAP;AACD,GANM;;AAOT,SAAA,IAAA;AAAC,CAtBD,EAAA,C,CAwBA;;;AACa,OAAA,CAAA,UAAA,GAAa,UAAC,IAAD,EAAa;AACrC,MAAI,IAAI,KAAK,WAAb,EAA0B;AACxB,WAAO,IAAI,IAAJ,CAAS,WAAA,CAAA,SAAT,CAAP;AACD;;AAED,MAAI,IAAI,KAAK,QAAb,EAAuB;AACrB,WAAO,IAAI,IAAJ,CAAS,QAAA,CAAA,MAAT,CAAP;AACD;;AAED,QAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACD,CAVY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ripemd160_1 = require(\"../ripemd160\");\nvar sha256_1 = require(\"../sha256\");\nexports.createHmac = require(\"create-hmac\");\nexports.randomBytes = require(\"randombytes\");\nvar Hash = /** @class */ (function () {\n    function Hash(hashFunction) {\n        this.hashFunction = hashFunction;\n        this.buffers = [];\n    }\n    Hash.prototype.update = function (buffer) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new Error(\"hdkey-crypto shim is outdated\");\n        }\n        this.buffers.push(buffer);\n        return this;\n    };\n    Hash.prototype.digest = function (param) {\n        if (param) {\n            throw new Error(\"hdkey-crypto shim is outdated\");\n        }\n        return this.hashFunction(Buffer.concat(this.buffers));\n    };\n    return Hash;\n}());\n// We don't use create-hash here, as it doesn't work well with Rollup\nexports.createHash = function (name) {\n    if (name === \"ripemd160\") {\n        return new Hash(ripemd160_1.ripemd160);\n    }\n    if (name === \"sha256\") {\n        return new Hash(sha256_1.sha256);\n    }\n    throw new Error(\"hdkey-crypto shim is outdated\");\n};\n//# sourceMappingURL=hdkey-crypto.js.map"]},"metadata":{},"sourceType":"script"}