{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbuonocore/personal/hackathons/hackfs21/packages/react-app/src/components/Contract/utils.js\";\nimport React from \"react\";\nimport { Address } from \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  utils\n} = require(\"ethers\");\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\" + utils.formatUnits(thing, \"ether\");\n    }\n  }\n\n  if (thing && thing.indexOf && thing.indexOf(\"0x\") === 0 && thing.length === 42) {\n    return /*#__PURE__*/_jsxDEV(Address, {\n      address: thing,\n      fontSize: 22\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;","map":{"version":3,"sources":["/Users/chrisbuonocore/personal/hackathons/hackfs21/packages/react-app/src/components/Contract/utils.js"],"names":["React","Address","utils","require","tryToDisplay","thing","toNumber","e","formatUnits","indexOf","length","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,IAAxB;;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYC,OAAO,CAAC,QAAD,CAAzB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,MAAIA,KAAK,IAAIA,KAAK,CAACC,QAAnB,EAA6B;AAC3B,QAAI;AACF,aAAOD,KAAK,CAACC,QAAN,EAAP;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,aAAO,MAAML,KAAK,CAACM,WAAN,CAAkBH,KAAlB,EAAyB,OAAzB,CAAb;AACD;AACF;;AACD,MAAIA,KAAK,IAAIA,KAAK,CAACI,OAAf,IAA0BJ,KAAK,CAACI,OAAN,CAAc,IAAd,MAAwB,CAAlD,IAAuDJ,KAAK,CAACK,MAAN,KAAiB,EAA5E,EAAgF;AAC9E,wBAAO,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEL,KAAlB;AAAyB,MAAA,QAAQ,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,SAAOM,IAAI,CAACC,SAAL,CAAeP,KAAf,CAAP;AACD,CAZD;;AAcA,eAAeD,YAAf","sourcesContent":["import React from \"react\";\nimport { Address } from \"..\";\nconst { utils } = require(\"ethers\");\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\" + utils.formatUnits(thing, \"ether\");\n    }\n  }\n  if (thing && thing.indexOf && thing.indexOf(\"0x\") === 0 && thing.length === 42) {\n    return <Address address={thing} fontSize={22} />;\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n"]},"metadata":{},"sourceType":"module"}