{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbuonocore/personal/hackathons/hackfs21/packages/react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"; //import Torus from \"@toruslabs/torus-embed\"\n\nimport WalletLink from \"walletlink\";\nimport { Alert, Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport { useBalance, useContractLoader, useContractReader, useEventListener, useExchangePrice, useGasPrice, useOnBlock, useUserSigner } from \"./hooks\"; // import Hints from \"./Hints\";\n\nimport { ExampleUI, Hints, Subgraph } from \"./views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ethers\n} = require(\"ethers\");\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    🌏 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// 📡 What chain are your contracts deployed to?\n\n\nconst targetNetwork = TARGET_NETWORK; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// 😬 Sorry for all the console logging\n\nconst DEBUG = true;\nconst NETWORKCHECK = true; // 🛰 providers\n\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\n\nconst scaffoldEthProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\") : null;\nconst mainnetInfura = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID) : null; // ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_I )\n// 🏠 Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv); // 🔭 block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer; // Coinbase walletLink init\n\nconst walletLink = new WalletLink({\n  appName: 'coinbase'\n}); // WalletLink provider\n\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true,\n  // optional\n  theme: \"light\",\n  // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n          // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          100: \"https://dai.poa.network\" // xDai\n\n        }\n      }\n    },\n\n    /*torus: {\n      package: Torus,\n    },*/\n    'custom-walletlink': {\n      display: {\n        logo: 'https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0',\n        name: 'Coinbase',\n        description: 'Connect to Coinbase Wallet (not Coinbase App)'\n      },\n      package: walletLinkProvider,\n      connector: async (provider, options) => {\n        await provider.enable();\n        return provider;\n      }\n    }\n  }\n});\n\nfunction App(props) {\n  _s();\n\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n\n\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n\n  const userSigner = useUserSigner(injectedProvider, localProvider);\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [userSigner]); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userSigner, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different 🛰 providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address); // Load in your local 📝 contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider); // If you want to make 🔐 write transactions to your contracts, use the userSigner:\n\n  const writeContracts = useContractLoader(userSigner, {\n    chainId: localChainId\n  }); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetContracts = useContractLoader(mainnetProvider); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {\n    console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  }); // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]); // keep track of a variable from the contract in the local React state:\n\n  const purpose = useContractReader(readContracts, \"YourContract\", \"purpose\"); // 📟 Listen for broadcast events\n\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n  //\n  // 🧫 DEBUG 👨🏻‍🔬\n  //\n\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetContracts) {\n      console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\n      console.log(\"🌎 mainnetProvider\", mainnetProvider);\n      console.log(\"🏠 localChainId\", localChainId);\n      console.log(\"👩‍💼 selected address:\", address);\n      console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\n      console.log(\"💵 yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"📝 readContracts\", readContracts);\n      console.log(\"🌍 DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"💵 yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"🔐 writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetContracts]);\n  let networkDisplay = \"\";\n\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network ID\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"chain id 1337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 26\n            }, this), \" for localhost and you need to change it to \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"31337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 90\n            }, this), \" to work with HardHat.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this);\n    } else {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: networkSelected && networkSelected.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 26\n            }, this), \" selected and you need to be on\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: async () => {\n                const ethereum = window.ethereum;\n                const data = [{\n                  chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                  chainName: targetNetwork.name,\n                  nativeCurrency: targetNetwork.nativeCurrency,\n                  rpcUrls: [targetNetwork.rpcUrl],\n                  blockExplorerUrls: [targetNetwork.blockExplorer]\n                }];\n                console.log(\"data\", data);\n                const tx = await ethereum.request({\n                  method: \"wallet_addEthereumChain\",\n                  params: data\n                }).catch();\n\n                if (tx) {\n                  console.log(tx);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: networkLocal && networkLocal.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: -1,\n        position: \"absolute\",\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      children: targetNetwork.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    }); // Subscribe to session disconnection\n\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId === 31337 && yourLocalBalance && ethers.utils.formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          faucetTx({\n            to: address,\n            value: ethers.utils.parseEther(\"0.01\")\n          });\n          setFaucetClicked(true);\n        },\n        children: \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this);\n  }\n\n  const ROUTES = [\"discover\", \"sell\", \"stream\", \"access\", \"broadcasters\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), networkDisplay, /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        style: {\n          textAlign: \"center\"\n        },\n        selectedKeys: [route],\n        mode: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/\");\n            },\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)\n        }, \"/\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/hints\");\n            },\n            to: \"/hints\",\n            children: \"Hints\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)\n        }, \"/hints\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/exampleui\");\n            },\n            to: \"/exampleui\",\n            children: \"ExampleUI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)\n        }, \"/exampleui\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/mainnetdai\");\n            },\n            to: \"/mainnetdai\",\n            children: \"Mainnet DAI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)\n        }, \"/mainnetdai\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/subgraph\");\n            },\n            to: \"/subgraph\",\n            children: \"Subgraph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)\n        }, \"/subgraph\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Contract, {\n            name: \"YourContract\",\n            signer: userSigner,\n            provider: localProvider,\n            address: address,\n            blockExplorer: blockExplorer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hints\",\n          children: /*#__PURE__*/_jsxDEV(Hints, {\n            address: address,\n            yourLocalBalance: yourLocalBalance,\n            mainnetProvider: mainnetProvider,\n            price: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/exampleui\",\n          children: /*#__PURE__*/_jsxDEV(ExampleUI, {\n            address: address,\n            userSigner: userSigner,\n            mainnetProvider: mainnetProvider,\n            localProvider: localProvider,\n            yourLocalBalance: yourLocalBalance,\n            price: price,\n            tx: tx,\n            writeContracts: writeContracts,\n            readContracts: readContracts,\n            purpose: purpose,\n            setPurposeEvents: setPurposeEvents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/mainnetdai\",\n          children: /*#__PURE__*/_jsxDEV(Contract, {\n            name: \"DAI\",\n            customContract: mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.DAI,\n            signer: userSigner,\n            provider: mainnetProvider,\n            address: address,\n            blockExplorer: \"https://etherscan.io/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/subgraph\",\n          children: /*#__PURE__*/_jsxDEV(Subgraph, {\n            subgraphUri: props.subgraphUri,\n            tx: tx,\n            writeContracts: writeContracts,\n            mainnetProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Account, {\n        address: address,\n        localProvider: localProvider,\n        userSigner: userSigner,\n        mainnetProvider: mainnetProvider,\n        price: price,\n        web3Modal: web3Modal,\n        loadWeb3Modal: loadWeb3Modal,\n        logoutOfWeb3Modal: logoutOfWeb3Modal,\n        blockExplorer: blockExplorer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), faucetHint]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"left\",\n        left: 0,\n        bottom: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Ramp, {\n            price: price,\n            address: address,\n            networks: NETWORKS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 0.8\n          },\n          children: /*#__PURE__*/_jsxDEV(GasGauge, {\n            gasPrice: gasPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n            },\n            size: \"large\",\n            shape: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 8\n              },\n              role: \"img\",\n              \"aria-label\": \"support\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this), \"Support\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children:\n          /*  if the local provider has a signer, let's show the faucet:  */\n          faucetAvailable ? /*#__PURE__*/_jsxDEV(Faucet, {\n            localProvider: localProvider,\n            price: price,\n            ensProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 17\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MmJ9uCK/PiuW5HunBxPHvKA47+A=\", false, function () {\n  return [useExchangePrice, useGasPrice, useUserSigner, useBalance, useBalance, useContractLoader, useContractLoader, useContractLoader, useOnBlock, useContractReader, useContractReader, useEventListener];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chrisbuonocore/personal/hackathons/hackfs21/packages/react-app/src/App.jsx"],"names":["WalletConnectProvider","WalletLink","Alert","Button","Col","Menu","Row","React","useCallback","useEffect","useState","BrowserRouter","Link","Route","Switch","Web3Modal","Account","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","INFURA_ID","NETWORK","NETWORKS","Transactor","useBalance","useContractLoader","useContractReader","useEventListener","useExchangePrice","useGasPrice","useOnBlock","useUserSigner","ExampleUI","Hints","Subgraph","ethers","require","targetNetwork","TARGET_NETWORK","DEBUG","NETWORKCHECK","console","log","scaffoldEthProvider","navigator","onLine","providers","StaticJsonRpcProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3Modal","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","display","logo","name","description","connector","provider","enable","App","props","mainnetProvider","_network","injectedProvider","setInjectedProvider","address","setAddress","logoutOfWeb3Modal","clearCachedProvider","disconnect","setTimeout","window","location","reload","price","gasPrice","userSigner","getAddress","newAddress","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","purpose","setPurposeEvents","utils","formatEther","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","ethereum","data","toString","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","request","method","params","catch","color","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","indexOf","faucetClicked","setFaucetClicked","to","value","parseEther","ROUTES","textAlign","contracts","DAI","subgraphUri","left","bottom","opacity","open","marginRight"],"mappings":"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","sourcesContent":["import WalletConnectProvider from \"@walletconnect/web3-provider\";\n//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from \"walletlink\";\nimport { Alert, Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useEventListener,\n  useExchangePrice,\n  useGasPrice,\n  useOnBlock,\n  useUserSigner,\n} from \"./hooks\";\n// import Hints from \"./Hints\";\nimport { ExampleUI, Hints, Subgraph } from \"./views\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    🌏 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// 📡 What chain are your contracts deployed to?\nconst targetNetwork = TARGET_NETWORK; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\n\n// 🛰 providers\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\") : null;\nconst mainnetInfura = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID) : null;\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_I )\n\n// 🏠 Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// 🔭 block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: 'coinbase',\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(\n    `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    1,\n);\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true, // optional\n  theme:\"light\", // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1:`https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          100:\"https://dai.poa.network\", // xDai\n        },\n      },\n    },\n    /*torus: {\n      package: Torus,\n    },*/\n    'custom-walletlink': {\n      display: {\n        logo: 'https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0',\n        name: 'Coinbase',\n        description: 'Connect to Coinbase Wallet (not Coinbase App)',\n      },\n      package: walletLinkProvider,\n      connector: async (provider, options) => {\n        await provider.enable();\n        return provider;\n      },\n    },\n  },\n});\n\n\n\nfunction App(props) {\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if(injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\"){\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userSigner = useUserSigner(injectedProvider, localProvider);\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, { chainId: localChainId });\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts, \"YourContract\", \"purpose\");\n\n  // 📟 Listen for broadcast events\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // 🧫 DEBUG 👨🏻‍🔬\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\n      console.log(\"🌎 mainnetProvider\", mainnetProvider);\n      console.log(\"🏠 localChainId\", localChainId);\n      console.log(\"👩‍💼 selected address:\", address);\n      console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\n      console.log(\"💵 yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"📝 readContracts\", readContracts);\n      console.log(\"🌍 DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"💵 yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"🔐 writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n                    const tx = await ethereum.request({ method: \"wallet_addEthereumChain\", params: data }).catch();\n                    if (tx) {\n                      console.log(tx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n                .\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          💰 Grab funds from the faucet ⛽️\n        </Button>\n      </div>\n    );\n  }\n\n  const ROUTES = [\"discover\", \"sell\", \"stream\", \"access\", \"broadcasters\"];\n\n  return (\n    <div className=\"App\">\n      {/* ✏️ Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              \n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/hints\">\n            <Link\n              onClick={() => {\n                setRoute(\"/hints\");\n              }}\n              to=\"/hints\"\n            >\n              Hints\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/exampleui\">\n            <Link\n              onClick={() => {\n                setRoute(\"/exampleui\");\n              }}\n              to=\"/exampleui\"\n            >\n              ExampleUI\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/mainnetdai\">\n            <Link\n              onClick={() => {\n                setRoute(\"/mainnetdai\");\n              }}\n              to=\"/mainnetdai\"\n            >\n              Mainnet DAI\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/subgraph\">\n            <Link\n              onClick={() => {\n                setRoute(\"/subgraph\");\n              }}\n              to=\"/subgraph\"\n            >\n              Subgraph\n            </Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {/*\n                🎛 this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n            <Contract\n              name=\"YourContract\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n          </Route>\n          <Route path=\"/hints\">\n            <Hints\n              address={address}\n              yourLocalBalance={yourLocalBalance}\n              mainnetProvider={mainnetProvider}\n              price={price}\n            />\n          </Route>\n          <Route path=\"/exampleui\">\n            <ExampleUI\n              address={address}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={price}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n            />\n          </Route>\n          <Route path=\"/mainnetdai\">\n            <Contract\n              name=\"DAI\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.DAI}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer=\"https://etherscan.io/\"\n            />\n            {/*\n            <Contract\n              name=\"UNI\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.UNI}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer=\"https://etherscan.io/\"\n            />\n            */}\n          </Route>\n          <Route path=\"/subgraph\">\n            <Subgraph\n              subgraphUri={props.subgraphUri}\n              tx={tx}\n              writeContracts={writeContracts}\n              mainnetProvider={mainnetProvider}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userSigner={userSigner}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                💬\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}