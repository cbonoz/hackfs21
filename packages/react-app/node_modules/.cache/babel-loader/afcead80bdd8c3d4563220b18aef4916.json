{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport { useState, useEffect, useCallback } from \"react\";\nexport default function useEventListener(contract, eventName, provider, startBlock) {\n  var _a = __read(useState([]), 2),\n      updates = _a[0],\n      setUpdates = _a[1];\n\n  var addNewEvent = useCallback(function () {\n    var eventArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      eventArgs[_i] = arguments[_i];\n    }\n\n    return setUpdates(function (messages) {\n      return __spread(messages, [eventArgs.pop().args]);\n    });\n  }, []); // eslint-disable-next-line consistent-return\n\n  useEffect(function () {\n    if (typeof provider !== \"undefined\" && typeof startBlock !== \"undefined\") {\n      // if you want to read _all_ events from your contracts, set this to the block number it is deployed\n      provider.resetEventsBlock(startBlock);\n    }\n\n    if (contract) {\n      try {\n        contract.on(eventName, addNewEvent);\n        return function () {\n          contract.off(eventName, addNewEvent);\n        };\n      } catch (e) {\n        // Event \"eventName\" may not exist on contract\n        // eslint-disable-next-line no-console\n        console.log(e);\n      }\n    }\n  }, [provider, contract, eventName, startBlock, addNewEvent]);\n  return updates;\n}","map":{"version":3,"sources":["/Users/chrisbuonocore/personal/hackathons/hackfs21/node_modules/eth-hooks/lib/Events/EventListener.js"],"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spread","arguments","length","concat","useState","useEffect","useCallback","useEventListener","contract","eventName","provider","startBlock","_a","updates","setUpdates","addNewEvent","eventArgs","_i","messages","pop","args","resetEventsBlock","on","off","console","log"],"mappings":"AAAA,IAAIA,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCH,CAAC,CAACG,MAAM,CAACC,QAAR,CAAzC;AACA,MAAI,CAACF,CAAL,EAAQ,OAAOF,CAAP;AACR,MAAIK,CAAC,GAAGH,CAAC,CAACI,IAAF,CAAON,CAAP,CAAR;AAAA,MAAmBO,CAAnB;AAAA,MAAsBC,EAAE,GAAG,EAA3B;AAAA,MAA+BC,CAA/B;;AACA,MAAI;AACA,WAAO,CAACR,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAF,EAAL,EAAeC,IAApD,EAA0DH,EAAE,CAACI,IAAH,CAAQL,CAAC,CAACM,KAAV;AAC7D,GAFD,CAGA,OAAOC,KAAP,EAAc;AAAEL,IAAAA,CAAC,GAAG;AAAEK,MAAAA,KAAK,EAAEA;AAAT,KAAJ;AAAuB,GAHvC,SAIQ;AACJ,QAAI;AACA,UAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAR,KAAiBT,CAAC,GAAGG,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuCH,CAAC,CAACI,IAAF,CAAOD,CAAP;AAC1C,KAFD,SAGQ;AAAE,UAAII,CAAJ,EAAO,MAAMA,CAAC,CAACK,KAAR;AAAgB;AACpC;;AACD,SAAON,EAAP;AACH,CAfD;;AAgBA,IAAIO,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClD,OAAK,IAAIP,EAAE,GAAG,EAAT,EAAaH,CAAC,GAAG,CAAtB,EAAyBA,CAAC,GAAGW,SAAS,CAACC,MAAvC,EAA+CZ,CAAC,EAAhD,EAAoDG,EAAE,GAAGA,EAAE,CAACU,MAAH,CAAUnB,MAAM,CAACiB,SAAS,CAACX,CAAD,CAAV,CAAhB,CAAL;;AACpD,SAAOG,EAAP;AACH,CAHD;;AAIA,SAASW,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,eAAe,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,QAA/C,EAAyDC,UAAzD,EAAqE;AAChF,MAAIC,EAAE,GAAG5B,MAAM,CAACoB,QAAQ,CAAC,EAAD,CAAT,EAAe,CAAf,CAAf;AAAA,MAAkCS,OAAO,GAAGD,EAAE,CAAC,CAAD,CAA9C;AAAA,MAAmDE,UAAU,GAAGF,EAAE,CAAC,CAAD,CAAlE;;AACA,MAAIG,WAAW,GAAGT,WAAW,CAAC,YAAY;AACtC,QAAIU,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGhB,SAAS,CAACC,MAAhC,EAAwCe,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,SAAS,CAACC,EAAD,CAAT,GAAgBhB,SAAS,CAACgB,EAAD,CAAzB;AACH;;AACD,WAAOH,UAAU,CAAC,UAAUI,QAAV,EAAoB;AAAE,aAAOlB,QAAQ,CAACkB,QAAD,EAAW,CAACF,SAAS,CAACG,GAAV,GAAgBC,IAAjB,CAAX,CAAf;AAAoD,KAA3E,CAAjB;AACH,GAN4B,EAM1B,EAN0B,CAA7B,CAFgF,CAShF;;AACAf,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI,OAAOK,QAAP,KAAoB,WAApB,IAAmC,OAAOC,UAAP,KAAsB,WAA7D,EAA0E;AACtE;AACAD,MAAAA,QAAQ,CAACW,gBAAT,CAA0BV,UAA1B;AACH;;AACD,QAAIH,QAAJ,EAAc;AACV,UAAI;AACAA,QAAAA,QAAQ,CAACc,EAAT,CAAYb,SAAZ,EAAuBM,WAAvB;AACA,eAAO,YAAY;AACfP,UAAAA,QAAQ,CAACe,GAAT,CAAad,SAAb,EAAwBM,WAAxB;AACH,SAFD;AAGH,OALD,CAMA,OAAOrB,CAAP,EAAU;AACN;AACA;AACA8B,QAAAA,OAAO,CAACC,GAAR,CAAY/B,CAAZ;AACH;AACJ;AACJ,GAlBQ,EAkBN,CAACgB,QAAD,EAAWF,QAAX,EAAqBC,SAArB,EAAgCE,UAAhC,EAA4CI,WAA5C,CAlBM,CAAT;AAmBA,SAAOF,OAAP;AACH","sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport { useState, useEffect, useCallback } from \"react\";\nexport default function useEventListener(contract, eventName, provider, startBlock) {\n    var _a = __read(useState([]), 2), updates = _a[0], setUpdates = _a[1];\n    var addNewEvent = useCallback(function () {\n        var eventArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            eventArgs[_i] = arguments[_i];\n        }\n        return setUpdates(function (messages) { return __spread(messages, [eventArgs.pop().args]); });\n    }, []);\n    // eslint-disable-next-line consistent-return\n    useEffect(function () {\n        if (typeof provider !== \"undefined\" && typeof startBlock !== \"undefined\") {\n            // if you want to read _all_ events from your contracts, set this to the block number it is deployed\n            provider.resetEventsBlock(startBlock);\n        }\n        if (contract) {\n            try {\n                contract.on(eventName, addNewEvent);\n                return function () {\n                    contract.off(eventName, addNewEvent);\n                };\n            }\n            catch (e) {\n                // Event \"eventName\" may not exist on contract\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }\n        }\n    }, [provider, contract, eventName, startBlock, addNewEvent]);\n    return updates;\n}\n"]},"metadata":{},"sourceType":"module"}