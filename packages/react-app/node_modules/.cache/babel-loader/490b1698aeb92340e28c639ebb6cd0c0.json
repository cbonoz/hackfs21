{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbuonocore/personal/hackathons/hackfs21/packages/react-app/src/components/Swap.jsx\",\n    _s = $RefreshSig$();\n\nimport { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\nimport { Button, Card, Descriptions, Divider, Drawer, InputNumber, Modal, notification, Row, Select, Space, Tooltip, Typography } from \"antd\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst {\n  Text\n} = Typography;\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nconst erc20Abi = [\"function balanceOf(address owner) view returns (uint256)\", \"function approve(address _spender, uint256 _value) public returns (bool success)\", \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\"];\n\nconst makeCall = async (callName, contract, args, metadata = {}) => {\n  if (contract[callName]) {\n    let result;\n\n    if (args) {\n      result = await contract[callName](...args, metadata);\n    } else {\n      result = await contract[callName]();\n    }\n\n    return result;\n  }\n\n  console.log(\"no call of that name!\");\n};\n\nconst defaultToken = \"ETH\";\nconst defaultTokenOut = \"DAI\";\nconst defaultSlippage = \"0.5\";\nconst defaultTimeLimit = 60 * 10;\n\nconst tokenListToObject = array => array.reduce((obj, item) => {\n  obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\n  return obj;\n}, {});\n\nfunction Swap({\n  selectedProvider,\n  tokenListURI\n}) {\n  _s();\n\n  const [tokenIn, setTokenIn] = useState(defaultToken);\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\n  const [exact, setExact] = useState();\n  const [amountIn, setAmountIn] = useState();\n  const [amountInMax, setAmountInMax] = useState();\n  const [amountOut, setAmountOut] = useState();\n  const [amountOutMin, setAmountOutMin] = useState();\n  const [trades, setTrades] = useState();\n  const [routerAllowance, setRouterAllowance] = useState();\n  const [balanceIn, setBalanceIn] = useState();\n  const [balanceOut, setBalanceOut] = useState();\n  const [slippageTolerance, setSlippageTolerance] = useState(new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"));\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\n  const [swapping, setSwapping] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\n  const [tokenList, setTokenList] = useState([]);\n  const [tokens, setTokens] = useState();\n  const [invertPrice, setInvertPrice] = useState(false);\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\n  const signer = selectedProvider.getSigner();\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri);\n\n      try {\n        const tokenList = await fetch(_tokenListUri);\n        const tokenListJson = await tokenList.json();\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\n          return t.chainId === activeChainId;\n        });\n        const ethToken = WETH[activeChainId];\n        ethToken.name = \"Ethereum\";\n        ethToken.symbol = \"ETH\";\n        ethToken.logoURI = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n        const _tokenList = [ethToken, ...filteredTokens];\n        setTokenList(_tokenList);\n\n        const _tokens = tokenListToObject(_tokenList);\n\n        setTokens(_tokens);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getTokenList();\n  }, [tokenListURI]);\n\n  const getTrades = async () => {\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\n\n      const baseTokens = tokenList.filter(function (t) {\n        return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\n      }).map(el => {\n        return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\n      });\n      const listOfPairwiseTokens = pairs(baseTokens);\n\n      const getPairs = async list => {\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n      };\n\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\n      let bestTrade;\n\n      if (exact === \"in\") {\n        setAmountInMax();\n        bestTrade = Trade.bestTradeExactIn(listOfPairs.filter(item => item), new TokenAmount(tokens[tokenIn], ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals)), tokens[tokenOut], {\n          maxNumResults: 3,\n          maxHops: 1\n        });\n\n        if (bestTrade[0]) {\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\n        } else {\n          setAmountOut();\n        }\n      } else if (exact === \"out\") {\n        setAmountOutMin();\n        bestTrade = Trade.bestTradeExactOut(listOfPairs.filter(item => item), tokens[tokenIn], new TokenAmount(tokens[tokenOut], ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals)), {\n          maxNumResults: 3,\n          maxHops: 1\n        });\n\n        if (bestTrade[0]) {\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\n        } else {\n          setAmountIn();\n        }\n      }\n\n      setTrades(bestTrade);\n      console.log(bestTrade);\n    }\n  };\n\n  useEffect(() => {\n    getTrades();\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\n  useEffect(() => {\n    if (trades && trades[0]) {\n      if (exact === \"in\") {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\n      } else if (exact === \"out\") {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades]);\n\n  const getBalance = async (_token, _account, _contract) => {\n    let newBalance;\n\n    if (_token === \"ETH\") {\n      newBalance = await selectedProvider.getBalance(_account);\n    } else {\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\n    }\n\n    return newBalance;\n  };\n\n  const getAccountInfo = async () => {\n    if (tokens) {\n      const accountList = await selectedProvider.listAccounts();\n\n      if (tokenIn) {\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\n        setBalanceIn(newBalanceIn);\n        let allowance;\n\n        if (tokenIn === \"ETH\") {\n          setRouterAllowance();\n        } else {\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\n          setRouterAllowance(allowance);\n        }\n      }\n\n      if (tokenOut) {\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\n        setBalanceOut(newBalanceOut);\n      }\n    }\n  };\n\n  usePoller(getAccountInfo, 6000);\n  const route = trades ? trades.length > 0 ? trades[0].route.path.map(function (item) {\n    return item.symbol;\n  }) : [] : [];\n\n  const updateRouterAllowance = async newAllowance => {\n    setApproving(true);\n\n    try {\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\n      console.log(result);\n      setApproving(false);\n      return true;\n    } catch (e) {\n      notification.open({\n        message: \"Approval unsuccessful\",\n        description: `Error: ${e.message}`\n      });\n    }\n  };\n\n  const approveRouter = async () => {\n    const approvalAmount = exact === \"in\" ? ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals)) : amountInMax.raw.toString();\n    console.log(approvalAmount);\n    const approval = updateRouterAllowance(approvalAmount);\n\n    if (approval) {\n      notification.open({\n        message: \"Token transfer approved\",\n        description: `You can now swap up to ${amountIn} ${tokenIn}`\n      });\n    }\n  };\n\n  const removeRouterAllowance = async () => {\n    const approvalAmount = ethers.utils.hexlify(0);\n    console.log(approvalAmount);\n    const removal = updateRouterAllowance(approvalAmount);\n\n    if (removal) {\n      notification.open({\n        message: \"Token approval removed\",\n        description: `The router is no longer approved for ${tokenIn}`\n      });\n    }\n  };\n\n  const executeSwap = async () => {\n    setSwapping(true);\n\n    try {\n      let args;\n      const metadata = {};\n      let call;\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\n      const path = trades[0].route.path.map(function (item) {\n        return item.address;\n      });\n      console.log(path);\n      const accountList = await selectedProvider.listAccounts();\n      const address = accountList[0];\n\n      if (exact === \"in\") {\n        const _amountIn = ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\n\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\n\n        if (tokenIn === \"ETH\") {\n          call = \"swapExactETHForTokens\";\n          args = [_amountOutMin, path, address, deadline];\n          metadata.value = _amountIn;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\n          args = [_amountIn, _amountOutMin, path, address, deadline];\n        }\n      } else if (exact === \"out\") {\n        const _amountOut = ethers.utils.hexlify(ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals));\n\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\n\n        if (tokenIn === \"ETH\") {\n          call = \"swapETHForExactTokens\";\n          args = [_amountOut, path, address, deadline];\n          metadata.value = _amountInMax;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\n          args = [_amountOut, _amountInMax, path, address, deadline];\n        }\n      }\n\n      console.log(call, args, metadata);\n      const result = await makeCall(call, routerContract, args, metadata);\n      console.log(result);\n      notification.open({\n        message: \"Swap complete 🦄\",\n        description: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: `Swapped ${tokenIn} for ${tokenOut}, transaction: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            copyable: true,\n            children: result.hash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      });\n      setSwapping(false);\n    } catch (e) {\n      console.log(e);\n      setSwapping(false);\n      notification.open({\n        message: \"Swap unsuccessful\",\n        description: `Error: ${e.message}`\n      });\n    }\n  };\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap();\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  const insufficientBalance = balanceIn ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn : null;\n  const inputIsToken = tokenIn !== \"ETH\";\n  const insufficientAllowance = !inputIsToken ? false : routerAllowance ? parseFloat(ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn : null;\n  const formattedBalanceIn = balanceIn ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6) : null;\n  const formattedBalanceOut = balanceOut ? parseFloat(ethers.utils.formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6) : null;\n  const metaIn = tokens && tokenList && tokenIn ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenIn].address;\n  })[0] : null;\n  const metaOut = tokens && tokenList && tokenOut ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenOut].address;\n  })[0] : null;\n\n  const cleanIpfsURI = uri => {\n    try {\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n    } catch (e) {\n      console.log(e, uri);\n      return uri;\n    }\n  };\n\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\n  const priceDescription = rawPrice ? invertPrice ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}` : `${price} ${tokenOut} per ${tokenIn}` : null;\n\n  const priceWidget = /*#__PURE__*/_jsxDEV(Space, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      type: \"secondary\",\n      children: priceDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"text\",\n      onClick: () => {\n        setInvertPrice(!invertPrice);\n      },\n      children: /*#__PURE__*/_jsxDEV(RetweetOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 5\n  }, this);\n\n  const swapModal = /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Confirm swap\",\n    visible: swapModalVisible,\n    onOk: handleSwapModalOk,\n    onCancel: handleSwapModalCancel,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoIn,\n          alt: tokenIn,\n          width: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), amountIn, tokenIn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        width: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoOut,\n          alt: tokenOut,\n          width: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), amountOut, tokenOut]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: priceWidget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: trades && (amountOutMin && exact === \"in\" || amountInMax && exact === \"out\") ? exact === \"in\" ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(6)} ${tokenOut} or the transaction will revert.` : `Input is estimated. You will sell at most ${amountInMax.toSignificant(6)} ${tokenIn} or the transaction will revert.` : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: /*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\",\n        width: \"40\",\n        alt: \"uniswapLogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Uniswapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }, this),\n    extra: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"text\",\n      onClick: () => {\n        setSettingsVisible(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(SettingOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          size: \"small\",\n          type: \"inner\",\n          title: `From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`,\n          extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoIn,\n              alt: tokenIn,\n              width: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"link\",\n              onClick: () => {\n                setAmountOut();\n                setAmountIn(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals));\n                setAmountOutMin();\n                setAmountInMax();\n                setExact(\"in\");\n              },\n              children: formattedBalanceIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true),\n          style: {\n            width: 400,\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n            style: {\n              width: \"160px\"\n            },\n            min: 0,\n            size: \"large\",\n            value: amountIn,\n            onChange: e => {\n              setAmountOut();\n              setTrades();\n              setAmountIn(e);\n              setExact(\"in\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            showSearch: true,\n            value: tokenIn,\n            style: {\n              width: \"120px\"\n            },\n            size: \"large\",\n            bordered: false,\n            defaultValue: defaultToken,\n            onChange: value => {\n              console.log(value);\n\n              if (value === tokenOut) {\n                console.log(\"switch!\", tokenIn);\n                setTokenOut(tokenIn);\n                setAmountOut(amountIn);\n                setBalanceOut(balanceIn);\n              }\n\n              setTokenIn(value);\n              setTrades();\n              setAmountIn();\n              setExact(\"out\");\n              setBalanceIn();\n            },\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            optionFilterProp: \"children\",\n            children: tokenList.map(token => /*#__PURE__*/_jsxDEV(Option, {\n              value: token.symbol,\n              children: token.symbol\n            }, token.symbol, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: route.join(\"->\"),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2193\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          size: \"small\",\n          type: \"inner\",\n          title: `To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`,\n          extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoOut,\n              width: \"30\",\n              alt: tokenOut\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"text\",\n              children: formattedBalanceOut\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true),\n          style: {\n            width: 400,\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n            style: {\n              width: \"160px\"\n            },\n            size: \"large\",\n            min: 0,\n            value: amountOut,\n            onChange: e => {\n              setAmountOut(e);\n              setAmountIn();\n              setTrades();\n              setExact(\"out\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            showSearch: true,\n            value: tokenOut,\n            style: {\n              width: \"120px\"\n            },\n            size: \"large\",\n            bordered: false,\n            onChange: value => {\n              console.log(value, tokenIn, tokenOut);\n\n              if (value === tokenIn) {\n                console.log(\"switch!\", tokenOut);\n                setTokenIn(tokenOut);\n                setAmountIn(amountOut);\n                setBalanceIn(balanceOut);\n              }\n\n              setTokenOut(value);\n              setExact(\"in\");\n              setAmountOut();\n              setTrades();\n              setBalanceOut();\n            },\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            optionFilterProp: \"children\",\n            children: tokenList.map(token => /*#__PURE__*/_jsxDEV(Option, {\n              value: token.symbol,\n              children: token.symbol\n            }, token.symbol, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        children: priceDescription ? priceWidget : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [inputIsToken ? /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            loading: approving,\n            disabled: !insufficientAllowance,\n            onClick: approveRouter,\n            children: !insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            loading: swapping,\n            disabled: insufficientAllowance || insufficientBalance || !amountIn || !amountOut,\n            onClick: showSwapModal,\n            children: insufficientBalance ? \"Insufficient balance\" : \"Swap!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this), swapModal]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      visible: settingsVisible,\n      onClose: () => {\n        setSettingsVisible(false);\n      },\n      width: 500,\n      children: /*#__PURE__*/_jsxDEV(Descriptions, {\n        title: \"Details\",\n        column: 1,\n        style: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"blockNumber\",\n          children: blockNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"routerAllowance\",\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            children: [routerAllowance ? ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals) : null, routerAllowance > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: removeRouterAllowance,\n              children: \"Remove Allowance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 38\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"route\",\n          children: route.join(\"->\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"exact\",\n          children: exact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"bestPrice\",\n          children: trades ? trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"nextMidPrice\",\n          children: trades ? trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"priceImpact\",\n          children: trades ? trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"slippageTolerance\",\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            defaultValue: defaultSlippage,\n            min: 0,\n            max: 100,\n            precision: 2,\n            formatter: value => `${value}%`,\n            parser: value => value.replace(\"%\", \"\"),\n            onChange: value => {\n              console.log(value);\n              const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\n              setSlippageTolerance(slippagePercent);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"amountInMax\",\n          children: amountInMax ? amountInMax.toExact() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"amountOutMin\",\n          children: amountOutMin ? amountOutMin.toExact() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"timeLimitInSeconds\",\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            max: 3600,\n            defaultValue: defaultTimeLimit,\n            onChange: value => {\n              console.log(value);\n              setTimeLimit(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Swap, \"OSaCcudNhqj8C1bdfxC/UnQ+OCc=\", false, function () {\n  return [useBlockNumber, useDebounce, useDebounce, usePoller];\n});\n\n_c = Swap;\nexport default Swap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"sources":["/Users/chrisbuonocore/personal/hackathons/hackfs21/packages/react-app/src/components/Swap.jsx"],"names":["RetweetOutlined","SettingOutlined","ChainId","Fetcher","Percent","Token","TokenAmount","Trade","WETH","abi","IUniswapV2Router02ABI","Button","Card","Descriptions","Divider","Drawer","InputNumber","Modal","notification","Row","Select","Space","Tooltip","Typography","useBlockNumber","usePoller","ethers","React","useEffect","useState","useDebounce","Option","Text","ROUTER_ADDRESS","ZERO_ADDRESS","erc20Abi","makeCall","callName","contract","args","metadata","result","console","log","defaultToken","defaultTokenOut","defaultSlippage","defaultTimeLimit","tokenListToObject","array","reduce","obj","item","symbol","chainId","address","decimals","name","Swap","selectedProvider","tokenListURI","tokenIn","setTokenIn","tokenOut","setTokenOut","exact","setExact","amountIn","setAmountIn","amountInMax","setAmountInMax","amountOut","setAmountOut","amountOutMin","setAmountOutMin","trades","setTrades","routerAllowance","setRouterAllowance","balanceIn","setBalanceIn","balanceOut","setBalanceOut","slippageTolerance","setSlippageTolerance","Math","round","toString","timeLimit","setTimeLimit","swapping","setSwapping","approving","setApproving","settingsVisible","setSettingsVisible","swapModalVisible","setSwapModalVisible","tokenList","setTokenList","tokens","setTokens","invertPrice","setInvertPrice","blockNumber","signer","getSigner","routerContract","Contract","_tokenListUri","debouncedAmountIn","debouncedAmountOut","activeChainId","process","env","REACT_APP_NETWORK","KOVAN","MAINNET","getTokenList","fetch","tokenListJson","json","filteredTokens","filter","t","ethToken","logoURI","_tokenList","_tokens","e","getTrades","pairs","arr","map","v","i","slice","w","flat","baseTokens","includes","el","listOfPairwiseTokens","getPairs","list","listOfPromises","fetchPairData","Promise","all","p","catch","undefined","listOfPairs","bestTrade","bestTradeExactIn","utils","parseUnits","maxNumResults","maxHops","outputAmount","toSignificant","bestTradeExactOut","inputAmount","minimumAmountOut","maximumAmountIn","getBalance","_token","_account","_contract","newBalance","getAccountInfo","accountList","listAccounts","tempContractIn","newBalanceIn","allowance","tempContractOut","newBalanceOut","route","length","path","updateRouterAllowance","newAllowance","tempContract","open","message","description","approveRouter","approvalAmount","hexlify","raw","approval","removeRouterAllowance","removal","executeSwap","call","deadline","floor","Date","now","_amountIn","_amountOutMin","BigNumber","from","value","_amountOut","_amountInMax","hash","showSwapModal","handleSwapModalOk","handleSwapModalCancel","insufficientBalance","parseFloat","formatUnits","inputIsToken","insufficientAllowance","formattedBalanceIn","toPrecision","formattedBalanceOut","metaIn","metaOut","cleanIpfsURI","uri","replace","logoIn","logoOut","rawPrice","executionPrice","price","priceDescription","invert","priceWidget","swapModal","width","textAlign","input","option","children","toLowerCase","indexOf","token","join","nextMidPrice","priceImpact","slippagePercent","toExact"],"mappings":"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","sourcesContent":["import { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\nimport {\n  Button,\n  Card,\n  Descriptions,\n  Divider,\n  Drawer,\n  InputNumber,\n  Modal,\n  notification,\n  Row,\n  Select,\n  Space,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\n\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nconst erc20Abi = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n  \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\",\n];\n\nconst makeCall = async (callName, contract, args, metadata = {}) => {\n  if (contract[callName]) {\n    let result;\n    if (args) {\n      result = await contract[callName](...args, metadata);\n    } else {\n      result = await contract[callName]();\n    }\n    return result;\n  }\n  console.log(\"no call of that name!\");\n};\n\nconst defaultToken = \"ETH\";\nconst defaultTokenOut = \"DAI\";\nconst defaultSlippage = \"0.5\";\nconst defaultTimeLimit = 60 * 10;\n\nconst tokenListToObject = array =>\n  array.reduce((obj, item) => {\n    obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\n    return obj;\n  }, {});\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n  const [tokenIn, setTokenIn] = useState(defaultToken);\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\n  const [exact, setExact] = useState();\n  const [amountIn, setAmountIn] = useState();\n  const [amountInMax, setAmountInMax] = useState();\n  const [amountOut, setAmountOut] = useState();\n  const [amountOutMin, setAmountOutMin] = useState();\n  const [trades, setTrades] = useState();\n  const [routerAllowance, setRouterAllowance] = useState();\n  const [balanceIn, setBalanceIn] = useState();\n  const [balanceOut, setBalanceOut] = useState();\n  const [slippageTolerance, setSlippageTolerance] = useState(\n    new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"),\n  );\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\n  const [swapping, setSwapping] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\n\n  const [tokenList, setTokenList] = useState([]);\n\n  const [tokens, setTokens] = useState();\n\n  const [invertPrice, setInvertPrice] = useState(false);\n\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\n\n  const signer = selectedProvider.getSigner();\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri);\n      try {\n        const tokenList = await fetch(_tokenListUri);\n        const tokenListJson = await tokenList.json();\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\n          return t.chainId === activeChainId;\n        });\n        const ethToken = WETH[activeChainId];\n        ethToken.name = \"Ethereum\";\n        ethToken.symbol = \"ETH\";\n        ethToken.logoURI =\n          \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n        const _tokenList = [ethToken, ...filteredTokens];\n        setTokenList(_tokenList);\n        const _tokens = tokenListToObject(_tokenList);\n        setTokens(_tokens);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getTokenList();\n  }, [tokenListURI]);\n\n  const getTrades = async () => {\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\n\n      const baseTokens = tokenList\n        .filter(function (t) {\n          return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\n        })\n        .map(el => {\n          return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\n        });\n\n      const listOfPairwiseTokens = pairs(baseTokens);\n\n      const getPairs = async list => {\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n      };\n\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\n\n      let bestTrade;\n\n      if (exact === \"in\") {\n        setAmountInMax();\n        bestTrade = Trade.bestTradeExactIn(\n          listOfPairs.filter(item => item),\n          new TokenAmount(tokens[tokenIn], ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n          tokens[tokenOut],\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\n        } else {\n          setAmountOut();\n        }\n      } else if (exact === \"out\") {\n        setAmountOutMin();\n        bestTrade = Trade.bestTradeExactOut(\n          listOfPairs.filter(item => item),\n          tokens[tokenIn],\n          new TokenAmount(tokens[tokenOut], ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\n        } else {\n          setAmountIn();\n        }\n      }\n\n      setTrades(bestTrade);\n\n      console.log(bestTrade);\n    }\n  };\n\n  useEffect(() => {\n    getTrades();\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\n\n  useEffect(() => {\n    if (trades && trades[0]) {\n      if (exact === \"in\") {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\n      } else if (exact === \"out\") {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades]);\n\n  const getBalance = async (_token, _account, _contract) => {\n    let newBalance;\n    if (_token === \"ETH\") {\n      newBalance = await selectedProvider.getBalance(_account);\n    } else {\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\n    }\n    return newBalance;\n  };\n\n  const getAccountInfo = async () => {\n    if (tokens) {\n      const accountList = await selectedProvider.listAccounts();\n\n      if (tokenIn) {\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\n        setBalanceIn(newBalanceIn);\n\n        let allowance;\n\n        if (tokenIn === \"ETH\") {\n          setRouterAllowance();\n        } else {\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\n          setRouterAllowance(allowance);\n        }\n      }\n\n      if (tokenOut) {\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\n        setBalanceOut(newBalanceOut);\n      }\n    }\n  };\n\n  usePoller(getAccountInfo, 6000);\n\n  const route = trades\n    ? trades.length > 0\n      ? trades[0].route.path.map(function (item) {\n          return item.symbol;\n        })\n      : []\n    : [];\n\n  const updateRouterAllowance = async newAllowance => {\n    setApproving(true);\n    try {\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\n      console.log(result);\n      setApproving(false);\n      return true;\n    } catch (e) {\n      notification.open({\n        message: \"Approval unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const approveRouter = async () => {\n    const approvalAmount =\n      exact === \"in\"\n        ? ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        : amountInMax.raw.toString();\n    console.log(approvalAmount);\n    const approval = updateRouterAllowance(approvalAmount);\n    if (approval) {\n      notification.open({\n        message: \"Token transfer approved\",\n        description: `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  };\n\n  const removeRouterAllowance = async () => {\n    const approvalAmount = ethers.utils.hexlify(0);\n    console.log(approvalAmount);\n    const removal = updateRouterAllowance(approvalAmount);\n    if (removal) {\n      notification.open({\n        message: \"Token approval removed\",\n        description: `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  };\n\n  const executeSwap = async () => {\n    setSwapping(true);\n    try {\n      let args;\n      const metadata = {};\n\n      let call;\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\n      const path = trades[0].route.path.map(function (item) {\n        return item.address;\n      });\n      console.log(path);\n      const accountList = await selectedProvider.listAccounts();\n      const address = accountList[0];\n\n      if (exact === \"in\") {\n        const _amountIn = ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapExactETHForTokens\";\n          args = [_amountOutMin, path, address, deadline];\n          metadata.value = _amountIn;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\n          args = [_amountIn, _amountOutMin, path, address, deadline];\n        }\n      } else if (exact === \"out\") {\n        const _amountOut = ethers.utils.hexlify(\n          ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals),\n        );\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapETHForExactTokens\";\n          args = [_amountOut, path, address, deadline];\n          metadata.value = _amountInMax;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\n          args = [_amountOut, _amountInMax, path, address, deadline];\n        }\n      }\n      console.log(call, args, metadata);\n      const result = await makeCall(call, routerContract, args, metadata);\n      console.log(result);\n      notification.open({\n        message: \"Swap complete 🦄\",\n        description: (\n          <>\n            <Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text>\n            <Text copyable>{result.hash}</Text>\n          </>\n        ),\n      });\n      setSwapping(false);\n    } catch (e) {\n      console.log(e);\n      setSwapping(false);\n      notification.open({\n        message: \"Swap unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap();\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  const insufficientBalance = balanceIn\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const inputIsToken = tokenIn !== \"ETH\";\n  const insufficientAllowance = !inputIsToken\n    ? false\n    : routerAllowance\n    ? parseFloat(ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const formattedBalanceIn = balanceIn\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6)\n    : null;\n  const formattedBalanceOut = balanceOut\n    ? parseFloat(ethers.utils.formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6)\n    : null;\n\n  const metaIn =\n    tokens && tokenList && tokenIn\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenIn].address;\n        })[0]\n      : null;\n  const metaOut =\n    tokens && tokenList && tokenOut\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenOut].address;\n        })[0]\n      : null;\n\n  const cleanIpfsURI = uri => {\n    try {\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n    } catch (e) {\n      console.log(e, uri);\n      return uri;\n    }\n  };\n\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\n\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\n  const priceDescription = rawPrice\n    ? invertPrice\n      ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}`\n      : `${price} ${tokenOut} per ${tokenIn}`\n    : null;\n\n  const priceWidget = (\n    <Space>\n      <Text type=\"secondary\">{priceDescription}</Text>\n      <Button\n        type=\"text\"\n        onClick={() => {\n          setInvertPrice(!invertPrice);\n        }}\n      >\n        <RetweetOutlined />\n      </Button>\n    </Space>\n  );\n\n  const swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row>\n        <Space>\n          <img src={logoIn} alt={tokenIn} width=\"30\" />\n          {amountIn}\n          {tokenIn}\n        </Space>\n      </Row>\n      <Row justify=\"center\" align=\"middle\" style={{ width: 30 }}>\n        <span>↓</span>\n      </Row>\n      <Row>\n        <Space>\n          <img src={logoOut} alt={tokenOut} width=\"30\" />\n          {amountOut}\n          {tokenOut}\n        </Space>\n      </Row>\n      <Divider />\n      <Row>{priceWidget}</Row>\n      <Row>\n        {trades && ((amountOutMin && exact === \"in\") || (amountInMax && exact === \"out\"))\n          ? exact === \"in\"\n            ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(\n                6,\n              )} ${tokenOut} or the transaction will revert.`\n            : `Input is estimated. You will sell at most ${amountInMax.toSignificant(\n                6,\n              )} ${tokenIn} or the transaction will revert.`\n          : null}\n      </Row>\n    </Modal>\n  );\n\n  return (\n    <Card\n      title={\n        <Space>\n          <img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width=\"40\" alt=\"uniswapLogo\" />\n          <Typography>Uniswapper</Typography>\n        </Space>\n      }\n      extra={\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setSettingsVisible(true);\n          }}\n        >\n          <SettingOutlined />\n        </Button>\n      }\n    >\n      <Space direction=\"vertical\">\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoIn} alt={tokenIn} width=\"30\" />\n                <Button\n                  type=\"link\"\n                  onClick={() => {\n                    setAmountOut();\n                    setAmountIn(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals));\n                    setAmountOutMin();\n                    setAmountInMax();\n                    setExact(\"in\");\n                  }}\n                >\n                  {formattedBalanceIn}\n                </Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              min={0}\n              size=\"large\"\n              value={amountIn}\n              onChange={e => {\n                setAmountOut();\n                setTrades();\n                setAmountIn(e);\n                setExact(\"in\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenIn}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              defaultValue={defaultToken}\n              onChange={value => {\n                console.log(value);\n                if (value === tokenOut) {\n                  console.log(\"switch!\", tokenIn);\n                  setTokenOut(tokenIn);\n                  setAmountOut(amountIn);\n                  setBalanceOut(balanceIn);\n                }\n                setTokenIn(value);\n                setTrades();\n                setAmountIn();\n                setExact(\"out\");\n                setBalanceIn();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Tooltip title={route.join(\"->\")}>\n            <span>↓</span>\n          </Tooltip>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoOut} width=\"30\" alt={tokenOut} />\n                <Button type=\"text\">{formattedBalanceOut}</Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              size=\"large\"\n              min={0}\n              value={amountOut}\n              onChange={e => {\n                setAmountOut(e);\n                setAmountIn();\n                setTrades();\n                setExact(\"out\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenOut}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              onChange={value => {\n                console.log(value, tokenIn, tokenOut);\n                if (value === tokenIn) {\n                  console.log(\"switch!\", tokenOut);\n                  setTokenIn(tokenOut);\n                  setAmountIn(amountOut);\n                  setBalanceIn(balanceOut);\n                }\n                setTokenOut(value);\n                setExact(\"in\");\n                setAmountOut();\n                setTrades();\n                setBalanceOut();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          {priceDescription ? priceWidget : null}\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Space>\n            {inputIsToken ? (\n              <Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>\n                {!insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"}\n              </Button>\n            ) : null}\n            <Button\n              size=\"large\"\n              loading={swapping}\n              disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut}\n              onClick={showSwapModal}\n            >\n              {insufficientBalance ? \"Insufficient balance\" : \"Swap!\"}\n            </Button>\n            {swapModal}\n          </Space>\n        </Row>\n      </Space>\n      <Drawer\n        visible={settingsVisible}\n        onClose={() => {\n          setSettingsVisible(false);\n        }}\n        width={500}\n      >\n        <Descriptions title=\"Details\" column={1} style={{ textAlign: \"left\" }}>\n          <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n          <Descriptions.Item label=\"routerAllowance\">\n            <Space>\n              {routerAllowance ? ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals) : null}\n              {routerAllowance > 0 ? <Button onClick={removeRouterAllowance}>Remove Allowance</Button> : null}\n            </Space>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n          <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n          <Descriptions.Item label=\"bestPrice\">\n            {trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"nextMidPrice\">\n            {trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"priceImpact\">\n            {trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"slippageTolerance\">\n            <InputNumber\n              defaultValue={defaultSlippage}\n              min={0}\n              max={100}\n              precision={2}\n              formatter={value => `${value}%`}\n              parser={value => value.replace(\"%\", \"\")}\n              onChange={value => {\n                console.log(value);\n\n                const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\n                setSlippageTolerance(slippagePercent);\n              }}\n            />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"amountInMax\">{amountInMax ? amountInMax.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"amountOutMin\">{amountOutMin ? amountOutMin.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"timeLimitInSeconds\">\n            <InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={value => {\n                console.log(value);\n                setTimeLimit(value);\n              }}\n            />\n          </Descriptions.Item>\n        </Descriptions>\n      </Drawer>\n    </Card>\n  );\n}\n\nexport default Swap;\n"]},"metadata":{},"sourceType":"module"}