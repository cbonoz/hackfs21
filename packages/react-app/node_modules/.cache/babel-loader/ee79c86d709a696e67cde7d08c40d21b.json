{"ast":null,"code":"import { browserHmacSha256Sign, browserHmacSha512Sign } from \"../lib/browser\";\nimport { isConstantTime } from \"../helpers\";\nexport async function hmacSha256Sign(key, msg) {\n  const result = await browserHmacSha256Sign(key, msg);\n  return result;\n}\nexport async function hmacSha256Verify(key, msg, sig) {\n  const expectedSig = await browserHmacSha256Sign(key, msg);\n  const result = isConstantTime(expectedSig, sig);\n  return result;\n}\nexport async function hmacSha512Sign(key, msg) {\n  const result = await browserHmacSha512Sign(key, msg);\n  return result;\n}\nexport async function hmacSha512Verify(key, msg, sig) {\n  const expectedSig = await browserHmacSha512Sign(key, msg);\n  const result = isConstantTime(expectedSig, sig);\n  return result;\n}","map":{"version":3,"sources":["../../../src/browser/hmac.ts"],"names":[],"mappings":"AAAA,SAAS,qBAAT,EAAgC,qBAAhC,QAA6D,gBAA7D;AAEA,SAAS,cAAT,QAA+B,YAA/B;AAEA,OAAO,eAAe,cAAf,CACL,GADK,EAEL,GAFK,EAEU;AAEf,QAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,GAAD,EAAM,GAAN,CAA1C;AACA,SAAO,MAAP;AACD;AAED,OAAO,eAAe,gBAAf,CACL,GADK,EAEL,GAFK,EAGL,GAHK,EAGU;AAEf,QAAM,WAAW,GAAG,MAAM,qBAAqB,CAAC,GAAD,EAAM,GAAN,CAA/C;AACA,QAAM,MAAM,GAAG,cAAc,CAAC,WAAD,EAAc,GAAd,CAA7B;AACA,SAAO,MAAP;AACD;AAED,OAAO,eAAe,cAAf,CACL,GADK,EAEL,GAFK,EAEU;AAEf,QAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,GAAD,EAAM,GAAN,CAA1C;AACA,SAAO,MAAP;AACD;AAED,OAAO,eAAe,gBAAf,CACL,GADK,EAEL,GAFK,EAGL,GAHK,EAGU;AAEf,QAAM,WAAW,GAAG,MAAM,qBAAqB,CAAC,GAAD,EAAM,GAAN,CAA/C;AACA,QAAM,MAAM,GAAG,cAAc,CAAC,WAAD,EAAc,GAAd,CAA7B;AACA,SAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["import { browserHmacSha256Sign, browserHmacSha512Sign } from \"../lib/browser\";\nimport { isConstantTime } from \"../helpers\";\nexport async function hmacSha256Sign(key, msg) {\n    const result = await browserHmacSha256Sign(key, msg);\n    return result;\n}\nexport async function hmacSha256Verify(key, msg, sig) {\n    const expectedSig = await browserHmacSha256Sign(key, msg);\n    const result = isConstantTime(expectedSig, sig);\n    return result;\n}\nexport async function hmacSha512Sign(key, msg) {\n    const result = await browserHmacSha512Sign(key, msg);\n    return result;\n}\nexport async function hmacSha512Verify(key, msg, sig) {\n    const expectedSig = await browserHmacSha512Sign(key, msg);\n    const result = isConstantTime(expectedSig, sig);\n    return result;\n}\n//# sourceMappingURL=hmac.js.map"]},"metadata":{},"sourceType":"module"}